<?php

class Project_model extends Model {

	function __construct()
	{
		parent::__construct();
		
		// Tables being used:
		$this->_table_project = 		"project";
		$this->_table_project_tag =		"project_tag";
		
		$this->load->model('tag_model','_tag');
		$this->config->load('taglvl');
	}
	
	function addProjectTag($project_id, $tag_id)
	{
		$data = array("company_id"	=> $this->session->userdata('id'),
			"project_id"		=> $project_id,
			"tag_id"		=> $tag_id,
			"lvl"			=> 1,
			"turns_to_complete"	=> $this->config->item('tag_1')
		);
		
		$this->db->insert($this->_table_project_tag, $data);
		//return $data;
	}
	
	function getProjectBasic($id)
	{
		/*
			get project names and associated tags
			(multiple projects)
		*/
		
		// trying to make this function work for both a single project or multiple projects
		if(!is_array($id)){
			$id = array($id);
		}
		
		// get basic project info
		$result = array();
<<<<<<< HEAD
		$tags	= array();
		
		//pre_print_r($id);
		
		$this->db->where_in('id', $id); 	
		
=======
		$this->db->where_in('id', $id); 
>>>>>>> upstream/master
		$query = $this->db->get($this->_table_project);
		foreach ($query->result() as $row)
		{
			$p_ids[] = $row->id;
			$result[] = get_object_vars($row);
		}
		
		if(count($result)===1)
		{
			$result	= $result[0];
		}
		
		//echo $this->db->last_query();		
		//pre_print_r($result);
		//die();
		
		// get project tags
<<<<<<< HEAD
		if(!empty($result)){
			$this->db->select('tag_id AS id, lvl, turns_to_complete, completed');
			$this->db->where_in('project_id', $p_ids);
			$this->db->order_by('lvl', 'desc');
			$query = $this->db->get($this->_table_project_tag);
			foreach ($query->result() as $row)
			{
				$tags[$row->id] = $row->id;
				$result['tags'][$row->id] = get_object_vars($row);
			}		
		
			// use tag model to get tag info
			$tags = $this->_tag->getTags($tags);
=======

		$this->db->select('tag_id AS id, lvl, turns_to_complete, completed');
		$this->db->where_in('project_id', $p_ids);
		$this->db->order_by('lvl', 'desc');
		$query = $this->db->get($this->_table_project_tag);
		foreach ($query->result() as $row)
		{
			$tags[$row->id] = $row->id;
			$result['tags'][$row->id] = get_object_vars($row);
		}
		
		
		
		// use tag model to get tag info
		$tags = $this->_tag->getTags($tags);
>>>>>>> upstream/master
		
			foreach($result['tags'] as $k => $v)
			{
				$result['tags'][$k] += $tags[$k];
			
				// hard code goal/progress
				$result['tags'][$k]['goal'] = 10;
				$result['tags'][$k]['progress'] = 3;
			}
		//}		
		return $result;
	}
	
	function getProjectFull($id)
	{
		/* 
			get project basics + get goals, completed, valueation, etc.
			(single project)
		*/
		
		// get the basic project info
		$result = $this->getProjectBasic($id);
		
		// pull more detailed info
		
		
		return $result;
	}
	
	function getAllProjects($company_id)
	{
		/* 			
			get basic info for all projects assigned to a company id			
		*/
		
		$project_ids = array();
		
		// get all projects for this company
		$this->db->select('id');
		$this->db->where('company_id',$company_id);
		$this->db->order_by('created','modified');
		$query = $this->db->get($this->_table_project);
		foreach ($query->result() as $row)
		{
			$project_ids[] = $row->id;
		}	
		
		// get project tags for each project
		$result = $this->getProjectBasic($project_ids);
		pre_print_r($result);
		die();
		
		return $result;
		
	}
	
}